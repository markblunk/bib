@inproceedings{AFIPS:Batcher68,
  author =       "Batcher, K. E.",
  title =        "Sorting Networks and Their Applications",
  year =         1968,
  isbn =         9781450378970,
  publisher =    "Association for Computing Machinery",
  address =      "New York, NY, USA",
  url =          "https://doi.org/10.1145/1468075.1468121",
  doi =          "10.1145/1468075.1468121",
  abstract =     "To achieve high throughput rates today's computers
                  perform several operations simultaneously. Not only
                  are I/O operations performed concurrently with
                  computing, but also, in multiprocessors, several
                  computing operations are done concurrently. A major
                  problem in the design of such a computing system is
                  the connecting together of the various parts of the
                  system (the I/O devices, memories, processing units,
                  etc.) in such a way that all the required data
                  transfers can be accommodated. One common scheme is
                  a high-speed bus which is time-shared by the various
                  parts; speed of available hardware limits this
                  scheme. Another scheme is a cross-bar switch or
                  matrix; limiting factors here are the amount of
                  hardware (an m \texttimes{} n matrix requires m
                  \texttimes{} n cross-points) and the fan-in and
                  fan-out of the hardware.",
  booktitle =    "Proceedings of the April 30--May 2, 1968, Spring
                  Joint Computer Conference",
  pages =        "307–314",
  numpages =     8,
  location =     "Atlantic City, New Jersey",
  series =       "AFIPS '68 (Spring)"
}

@InProceedings{CSCML:FalNemOstO22,
  author =       "Falk, Brett Hemenway and Nema, Rohit and Ostrovsky,
                  Rafail",
  title =        "A Linear-Time 2-Party Secure Merge Protocol",
  booktitle =    "Cyber Security, Cryptology, and Machine Learning",
  year =         2022,
  publisher =    "Springer International Publishing",
  address =      "Cham",
  pages =        "408--427",
  abstract =     "We present a linear-time, space and communication
                  data-oblivious algorithm for securely merging two
                  private, sorted lists into a single sorted,
                  secret-shared list in the two party
                  setting. Although merging two sorted lists can be
                  done insecurely in linear time, previous secure
                  merge algorithms all require super-linear time and
                  communication. A key feature of our construction is
                  a novel method to obliviously traverse permuted
                  lists in sorted order. Our algorithm only requires
                  black-box use of the underlying Additively
                  Homomorphic cryptosystem and generic secure
                  computation schemes for comparison and equality
                  testing.",
  isbn =         "978-3-031-07689-3",
  doi =          "10.1007/978-3-031-07689-3_30"
}

@inproceedings{ECa:HubFraHog99,
  author =       "Huberman, Bernardo A. and Franklin, Matt and Hogg,
                  Tad",
  title =        "Enhancing Privacy and Trust in Electronic
                  Communities",
  year =         1999,
  isbn =         1581131763,
  publisher =    "Association for Computing Machinery",
  address =      "New York, NY, USA",
  url =          "https://doi.org/10.1145/336992.337012",
  doi =          "10.1145/336992.337012",
  booktitle =    "Proceedings of the 1st ACM Conference on Electronic
                  Commerce",
  pages =        "78–86",
  numpages =     9,
  location =     "Denver, Colorado, USA",
  series =       "EC '99"
}

@inproceedings{ICALP:Shamir80,
  author =       "Adi Shamir",
  title =        "On the Power of Commutativity in Cryptography",
  booktitle =    "Automata, Languages and Programming, 7th Colloquium,
                  Noordweijkerhout, The Netherlands, July 14-18, 1980,
                  Proceedings",
  series =       "Lecture Notes in Computer Science",
  volume =       85,
  pages =        "582--595",
  publisher =    "Springer",
  year =         1980,
  url =          "https://doi.org/10.1007/3-540-10003-2_100",
  doi =          "10.1007/3-540-10003-2_100",
  timestamp =    "Tue, 14 May 2019 10:00:44 +0200",
  biburl =       "https://dblp.org/rec/conf/icalp/Shamir80.bib",
  bibsource =    "dblp computer science bibliography,
                  https://dblp.org"
}

@inproceedings{ICDT:AraKau14,
  author =       "Arvind Arasu and Raghav Kaushik",
  title =        "Oblivious Query Processing",
  booktitle =    "Proc. 17th International Conference on Database
                  Theory (ICDT), Athens, Greece, March 24-28, 2014",
  pages =        "26--37",
  publisher =    "OpenProceedings.org",
  year =         2014,
  url =          "https://doi.org/10.5441/002/icdt.2014.07",
  doi =          "10.5441/002/icdt.2014.07",
  timestamp =    "Tue, 16 Jan 2018 17:46:10 +0100",
  biburl =       "https://dblp.org/rec/conf/icdt/ArasuK14.bib",
  bibsource =    "dblp computer science bibliography,
                  https://dblp.org"
}

@inproceedings{ICMCS:TajSatYam18,
  author =       "Tajima, Arisa and Sato, Hiroki and Yamana, Hayato",
  booktitle =    "2018 6th International Conference on Multimedia
                  Computing and Systems (ICMCS)",
  title =        "Outsourced Private Set Intersection Cardinality with
                  Fully Homomorphic Encryption",
  year =         2018,
  pages =        "1-8",
  doi =          "10.1109/ICMCS.2018.8525881",
  url =          "https://doi.org/10.1109/ICMCS.2018.8525881"
}

@article{IEICE:NisOht07,
  author =       "Takashi Nishide and Kazuo Ohta",
  title =        "Constant-Round Multiparty Computation for Interval
                  Test, Equality Test, and Comparison",
  journal =      "{IEICE}
                  Trans. Fundam. Electron. Commun. Comput. Sci.",
  volume =       "90-A",
  number =       5,
  pages =        "960--968",
  year =         2007,
  url =          "https://doi.org/10.1093/ietfec/e90-a.5.960",
  doi =          "10.1093/ietfec/e90-a.5.960",
  timestamp =    "Sat, 11 Apr 2020 13:29:17 +0200",
  biburl =       "https://dblp.org/rec/journals/ieicet/NishideO07.bib",
  bibsource =    "dblp computer science bibliography,
                  https://dblp.org"
}

@InProceedings{ITC:FalOst21,
  author =       "Falk, Brett Hemenway and Ostrovsky, Rafail",
  title =        "Secure Merge with O(n log log n) Secure Operations",
  booktitle =    "2nd Conference on Information-Theoretic Cryptography
                  (ITC 2021)",
  pages =        "7:1--7:29",
  series =       "Leibniz International Proceedings in Informatics
                  (LIPIcs)",
  ISBN =         "978-3-95977-197-9",
  ISSN =         "1868-8969",
  year =         2021,
  volume =       199,
  publisher =    "Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r
                  Informatik",
  address =      "Dagstuhl, Germany",
  URL =          "https://doi.org/10.4230/LIPIcs.ITC.2021.7",
  URN =          "urn:nbn:de:0030-drops-143265",
  doi =          "10.4230/LIPIcs.ITC.2021.7",
  annote =       "Keywords: Secure computation, Data-oblivious
                  algorithms, Sorting, Merging, Shuffling, Compaction"
}

@article{JACM:GolOst96,
  author    = {Oded Goldreich and
               Rafail Ostrovsky},
  title     = {Software Protection and Simulation on Oblivious RAMs},
  journal   = {J. {ACM}},
  volume    = {43},
  number    = {3},
  pages     = {431--473},
  year      = {1996},
  url       = {https://doi.org/10.1145/233551.233553},
  doi       = {10.1145/233551.233553},
  timestamp = {Wed, 14 Nov 2018 10:35:25 +0100},
  biburl    = {https://dblp.org/rec/journals/jacm/GoldreichO96.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{JACM:YaoYao76,
  author =       "Andrew Chi{-}Chih Yao and Foong Frances Yao",
  title =        "Lower Bounds on Merging Networks",
  journal =      "J. {ACM}",
  volume =       23,
  number =       3,
  pages =        "566--571",
  year =         1976,
  url =          "https://doi.org/10.1145/321958.321976",
  doi =          "10.1145/321958.321976",
  timestamp =    "Tue, 06 Nov 2018 12:51:45 +0100",
  biburl =       "https://dblp.org/rec/journals/jacm/YaoY76.bib",
  bibsource =    "dblp computer science bibliography,
                  https://dblp.org"
}

@article{JCSS:BorHopH85,
  author =       "Allan Borodin and John E. Hopcroft",
  title =        "Routing, Merging, and Sorting on Parallel Models of
                  Computation",
  journal =      "J. Comput. Syst. Sci.",
  volume =       30,
  number =       1,
  pages =        "130--145",
  year =         1985,
  url =          "https://doi.org/10.1016/0022-0000(85)90008-X",
  doi =          "10.1016/0022-0000(85)90008-X",
  timestamp =    "Tue, 16 Feb 2021 14:04:44 +0100",
  biburl =       "https://dblp.org/rec/journals/jcss/BorodinH85.bib",
  bibsource =    "dblp computer science bibliography,
                  https://dblp.org"
}

@inproceedings{NSDI:ZDBPGS17,
  author =       "Wenting Zheng and Ankur Dave and Jethro G. Beekman
                  and Raluca Ada Popa and Joseph E. Gonzalez and Ion
                  Stoica",
  title =        "Opaque: An Oblivious and Encrypted Distributed
                  Analytics Platform",
  booktitle =    "14th {USENIX} Symposium on Networked Systems Design
                  and Implementation, {NSDI} 2017, Boston, MA, USA,
                  March 27-29, 2017",
  pages =        "283--298",
  publisher =    "{USENIX} Association",
  year =         2017,
  url =          "https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/zheng",
  timestamp =    "Tue, 02 Feb 2021 08:05:48 +0100",
  biburl =       "https://dblp.org/rec/conf/nsdi/ZhengDBPGS17.bib",
  bibsource =    "dblp computer science bibliography,
                  https://dblp.org"
}

@article{PVLDB:EskZah19,
  author =       {Eskandarian, Saba and Zaharia, Matei},
  title =        {ObliDB: Oblivious Query Processing for Secure
                  Databases},
  year =         2019,
  issue_date =   {October 2019},
  publisher =    {VLDB Endowment},
  volume =       13,
  number =       2,
  issn =         {2150-8097},
  url =          {https://doi.org/10.14778/3364324.3364331},
  doi =          {10.14778/3364324.3364331},
  abstract =     {Hardware enclaves such as Intel SGX are a promising
                  technology for improving the security of databases
                  outsourced to the cloud. These enclaves provide an
                  execution environment isolated from the
                  hyper-visor/OS, and encrypt data in RAM. However,
                  for applications that use large amounts of memory,
                  including most databases, enclaves do not protect
                  against access pattern leaks, which let attackers
                  gain a large amount of information about the
                  data. Moreover, the na\"{\i}ve way to address this
                  issue, using Oblivious RAM (ORAM) primitives from
                  the security literature, adds substantial overhead.A
                  number of recent works explore trusted hardware
                  enclaves as a path toward secure, access-pattern
                  oblivious outsourcing of data storage and
                  analysis. While these works efficiently solve
                  specific subproblems (e.g. building secure indexes
                  or running analytics queries that always scan entire
                  tables), no prior work has supported oblivious query
                  processing for general query workloads on a DBMS
                  engine with multiple access methods. Moreover,
                  applying these techniques individually does not
                  guarantee that an end-to-end workload, such as a
                  complex SQL query over multiple tables, will be
                  oblivious. In this paper, we introduce ObliDB, an
                  oblivious database engine design that is the first
                  system to provide obliviousness for general database
                  read workloads over multiple access methods.ObliDB
                  introduces a diverse array of new oblivious physical
                  operators to accelerate oblivious SQL queries,
                  giving speedups of up to an order of magnitude over
                  na\"{\i}ve ORAM. It supports a broad range of
                  queries, including aggregation, joins, insertions,
                  deletions and point queries. We implement ObliDB and
                  show that, on analytics workloads, ObliDB ranges
                  from 1.1--19x faster than Opaque, a previous
                  oblivious, enclave-based system designed only for
                  analytics, and comes within 2.6 x of Spark SQL,
                  which provides no security guarantees. In addition,
                  ObliDB supports point queries with 3--10ms latency,
                  which is comparable to index-only trusted hardware
                  systems, and runs over 7x faster than HIRB, a
                  previous encryption-based oblivious index system
                  that supports point queries.},
  journal =      {Proc. VLDB Endow.},
  month =        {oct},
  pages =        {169–183},
  numpages =     15
}

@article{SIAMJC:Valiant75,
  author =       "Valiant, Leslie G.",
  title =        "Parallelism in Comparison Problems",
  journal =      "SIAM Journal on Computing",
  volume =       4,
  number =       3,
  pages =        "348-355",
  year =         1975,
  doi =          "10.1137/0204030",
  URL =          "https://doi.org/10.1137/0204030",
  abstract =     " The worst-case time complexity of algorithms for
                  multiprocessor computers with binary comparisons as
                  the basic operations is investigated. It is shown
                  that for the problems of finding the maximum,
                  sorting, and merging a pair of sorted lists, if n,
                  the size of the input set, is not less than k, the
                  number of processors, speedups of at least
                  \$O(k/\log \log k)\$ can be achieved with respect to
                  comparison operations. The algorithm for finding the
                  maximum is shown to be optimal for all values of k
                  and n. "
}

@inproceedings{SP:Meadows86,
  author =       {Meadows, Catherine},
  booktitle =    {1986 IEEE Symposium on Security and Privacy},
  title =        {A More Efficient Cryptographic Matchmaking Protocol
                  for Use in the Absence of a Continuously Available
                  Third Party},
  year =         1986,
  pages =        {134-134},
  abstract =     {The problem of authentication of mutually suspicious
                  parties is one that is becoming more and more
                  important with the proliferation of distributed
                  systems. In this paper we construct a protocol in
                  which users can verify whether they have matching
                  credentials without revealing their credentials to
                  each other unless there is a match. Thk protocol
                  requires a trusted third party, but does not require
                  it to be available to the users except when they
                  sign up for the system. Thus it is useful in
                  situations in which a trusted third party exists,
                  but is not available to all users at all times.},
  doi =          {10.1109/SP.1986.10022},
  ISSN =         {1540-7993},
  month =        {April}
}

@inproceedings{SocialSec:JiaWeiPan22,
  author =       "Jiang, Yuting and Wei, Jianghong and Pan, Jing",
  title =        "Publicly Verifiable Private Set Intersection
                  from Homomorphic Encryption",
  booktitle =    "Security and Privacy in Social Networks and Big
                  Data",
  year =         2022,
  publisher =    "Springer Nature Singapore",
  address =      "Singapore",
  pages =        "117--137",
  abstract =     "Private Set Intersection (PSI) enables two
                  mistrusting parties to securely evaluate the
                  intersection of their private inputs, without
                  revealing any additional information. With its wide
                  application in privacy protection, it is required to
                  ensure the correctness of the evaluation, especially
                  in conventional client-server setting (also known as
                  unbalanced PSI). Unfortunately, most existing work
                  cannot verify the integrity of the data and the
                  correctness of the evaluation. In this paper, we
                  propose a new publicly verifiable private set
                  intersection protocol in the malicious setting,
                  based on oblivious pseudo-random function (OPRF),
                  fully homomorphic encryption (FHE), and verifiable
                  computation (VC). The key tool to obtain our new
                  protocol is a new publicly verifiable inner product
                  computation on encrypted data. The protocol supports
                  public verification for computation correctness and
                  integrity under preserving privacy with less round
                  number (only requiring 2 rounds), allows batching
                  technique under Residue Number System (RNS). That is
                  used for enhancing the FHE. Also, we implement our
                  protocol, and the result is close to the most
                  effective unbalanced PSI.",
  isbn =         "978-981-19-7242-3",
  url =          "https://doi.org/10.1007/978-981-19-7242-3_8",
  doi =          "10.1007/978-981-19-7242-3_8"
}

@article{TOPS:PinSchZoh18,
  author =       {Pinkas, Benny and Schneider, Thomas and Zohner,
                  Michael},
  title =        {Scalable Private Set Intersection Based on OT
                  Extension},
  year =         2018,
  issue_date =   {May 2018},
  publisher =    {Association for Computing Machinery},
  address =      {New York, NY, USA},
  volume =       21,
  number =       2,
  issn =         {2471-2566},
  url =          {https://doi.org/10.1145/3154794},
  doi =          {10.1145/3154794},
  abstract =     {Private set intersection (PSI) allows two parties to
                  compute the intersection of their sets without
                  revealing any information about items that are not
                  in the intersection. It is one of the best studied
                  applications of secure computation and many PSI
                  protocols have been proposed. However, the variety
                  of existing PSI protocols makes it difficult to
                  identify the solution that performs best in a
                  respective scenario, especially since they were not
                  compared in the same setting. In addition, existing
                  PSI protocols are several orders of magnitude slower
                  than an insecure na\"{\i}ve hashing solution, which
                  is used in practice.In this article, we review the
                  progress made on PSI protocols and give an overview
                  of existing protocols in various security models. We
                  then focus on PSI protocols that are secure against
                  semi-honest adversaries and take advantage of the
                  most recent efficiency improvements in Oblivious
                  Transfer (OT) extension, propose significant
                  optimizations to previous PSI protocols, and suggest
                  a new PSI protocol whose runtime is superior to that
                  of existing protocols. We compare the performance of
                  the protocols, both theoretically and
                  experimentally, by implementing all protocols on the
                  same platform, give recommendations on which
                  protocol to use in a particular setting, and
                  evaluate the progress on PSI protocols by comparing
                  them to the currently employed insecure na\"{\i}ve
                  hashing protocol. We demonstrate the feasibility of
                  our new PSI protocol by processing two sets with a
                  billion elements each.},
  journal =      {ACM Trans. Priv. Secur.},
  month =        {jan},
  articleno =    7,
  numpages =     35,
  keywords =     {Anonymity and untraceability, Pseudonymity,
                  Privacy-preserving protocols}
}

@article{TPDS:HayNakOla98,
  author =       "Tatsuya Hayashi and Koji Nakano and Stephan Olariu",
  title =        "Work-Time Optimal k-Merge Algorithms on the {PRAM}",
  journal =      "{IEEE} Trans. Parallel Distributed Syst.",
  volume =       9,
  number =       3,
  pages =        "275--282",
  year =         1998,
  url =          "https://doi.org/10.1109/71.674319",
  doi =          "10.1109/71.674319",
  timestamp =    "Fri, 02 Oct 2020 14:40:37 +0200",
  biburl =       "https://dblp.org/rec/journals/tpds/HayashiNO98b.bib",
  bibsource =    "dblp computer science bibliography,
                  https://dblp.org"
}

@book{algorithm_book,
  author =       "Mehlhorn, Kurt and Sanders, Peter",
  title =        "Algorithms and Data Structures: The Basic Toolbox",
  year =         2008,
  isbn =         9783540779773,
  publisher =    "Springer Publishing Company, Incorporated",
  edition =      1,
  abstract =     "Algorithms are at the heart of every nontrivial
                  computer application, and algorithmics is a modern
                  and active area of computer science. Every computer
                  scientist and every professional programmer should
                  know about the basic algorithmic toolbox: structures
                  that allow efficient organization and retrieval of
                  data, frequently used algorithms, and basic
                  techniques for modeling, understanding and solving
                  algorithmic problems. This book is a concise
                  introduction addressed to students and professionals
                  familiar with programming and basic mathematical
                  language. Individual chapters cover arrays and
                  linked lists, hash tables and associative arrays,
                  sorting and selection, priority queues, sorted
                  sequences, graph representation, graph traversal,
                  shortest paths, minimum spanning trees, and
                  optimization. The algorithms are presented in a
                  modern way, with explicitly formulated invariants,
                  and comment on recent trends such as algorithm
                  engineering, memory hierarchies, algorithm libraries
                  and certifying algorithms. The authors use pictures,
                  words and high-level pseudocode to explain the
                  algorithms, and then they present more detail on
                  efficient implementations using real programming
                  languages like C++ and Java. The authors have
                  extensive experience teaching these subjects to
                  undergraduates and graduates, and they offer a clear
                  presentation, with examples, pictures, informal
                  explanations, exercises, and some linkage to the
                  real world. Most chapters have the same basic
                  structure: a motivation for the problem, comments on
                  the most important applications, and then simple
                  solutions presented as informally as possible and as
                  formally as necessary. For the more advanced issues,
                  this approach leads to a more mathematical
                  treatment, including some theorems and
                  proofs. Finally, each chapter concludes with a
                  section on further findings, providing views on the
                  state of research, generalizations and advanced
                  solutions.",
  url =          "https://doi.org/10.1007/978-3-540-77978-0"
}

@book{algorithm_book2,
  doi = "10.1007/978-1-84800-070-4",
  title =        "The algorithm design manual",
  author =       "Skiena, Steven S",
  volume =       2,
  year =         1998,
  publisher =    "Springer"
}
